{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackButton.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","options.js","App.js","index.js"],"names":["Section","title","children","className","FeedbackButton","feedback","onLeaveFeedback","type","value","onClick","FeedbackOptions","options","map","option","uuidv4","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","Notification","message","App","state","handleFeedback","bind","e","feedbackType","target","this","setState","prevState","Object","values","reduce","acc","Number","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOASeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIC,UAAU,SAAd,SAAwBF,IACvBC,M,QCQQE,EAZQ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAClC,OACE,wBACEC,KAAK,SACLC,MAAOH,EACPI,QAAS,SAACJ,GAAD,OAAcC,EAAgBD,IAHzC,SAKGA,KCOQK,EAVS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAClC,OAAOK,EAAQC,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CACER,SAAUQ,EACVP,gBAAiBA,GACZQ,mBCPLC,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,uCACO,+BAAOJ,OAEd,0CACU,+BAAOC,OAEjB,sCACM,+BAAOC,OAEb,wCACQ,+BAAOC,OAEf,sDAEE,iCACGC,EACD,+CAOVL,EAAWM,aAAe,CACxBD,mBAAoB,GAUPL,QCnCAO,EAJM,SAAC,GAAgB,EAAdC,QACtB,OAAO,mDCDIZ,EAAU,CAAC,OAAQ,UAAW,OCoE5Ba,E,kDA1Db,aAAe,IAAD,8BACZ,gBAKFC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,GANL,EAAKQ,eAAiB,EAAKA,eAAeC,KAApB,gBAHV,E,kDAYd,SAAeC,GACb,IAAMC,EAAeD,EAAEE,OAAOtB,MAC9BuB,KAAKC,UAAS,SAACC,GAAD,sBACXJ,EAAeI,EAAUJ,GAAgB,Q,gCAI9C,WACE,OAAOK,OAAOC,OAAOJ,KAAKN,OAAOW,QAAO,SAACC,EAAK7B,GAAN,OAAgB6B,EAAM7B,O,6CAGhE,WAAmC,IAAD,EACDuB,KAAKN,MAA5BT,EADwB,EACxBA,KAAMC,EADkB,EAClBA,QAASC,EADS,EACTA,IAEvB,OAAIF,EAAOE,EAAMD,IAAY,OAC3B,EACYqB,OAAOC,KAAKC,MAAOxB,GAAQA,EAAOE,EAAMD,GAAY,Q,oBAGpE,WAAU,IAAD,EACwBc,KAAKN,MAA5BT,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,8BACE,eAAC,EAAD,CAASjB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEU,QAASA,EACTL,gBAAiByB,KAAKL,iBAEO,IAA9BK,KAAKU,qBACJ,cAAC,EAAD,CACEzB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,KAAKU,qBACZrB,mBAAoBW,KAAKW,oCAG3B,cAAC,EAAD,CAAcnB,QAAQ,+B,GAnDhBoB,a,MCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8196a518.chunk.js","sourcesContent":["const Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className=\"header\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","const FeedbackButton = ({ feedback, onLeaveFeedback }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      value={feedback}\r\n      onClick={(feedback) => onLeaveFeedback(feedback)}\r\n    >\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FeedbackButton;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport FeedbackButton from \"./FeedbackButton\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map((option) => (\r\n    <FeedbackButton\r\n      feedback={option}\r\n      onLeaveFeedback={onLeaveFeedback}\r\n      key={uuidv4()}\r\n    ></FeedbackButton>\r\n  ));\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        Good:<span>{good}</span>\r\n      </li>\r\n      <li>\r\n        Neutral:<span>{neutral}</span>\r\n      </li>\r\n      <li>\r\n        Bad:<span>{bad}</span>\r\n      </li>\r\n      <li>\r\n        Total:<span>{total}</span>\r\n      </li>\r\n      <li>\r\n        Positive percentage:\r\n        <span>\r\n          {positivePercentage}\r\n          <span>&#37;</span>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","const Notification = ({ message }) => {\r\n  return <p>No feedback given</p>;\r\n};\r\n\r\nexport default Notification;\r\n","export const options = [\"good\", \"neutral\", \"bad\"];\r\n","import { Component } from \"react\";\r\n\r\nimport Section from \"./components/Section\";\r\nimport FeedbackOptions from \"./components/FeedbackOptions\";\r\nimport Statistics from \"./components/Statistics\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nimport { options } from \"./options\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.handleFeedback = this.handleFeedback.bind(this);\r\n  }\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleFeedback(e) {\r\n    const feedbackType = e.target.value;\r\n    this.setState((prevState) => ({\r\n      [feedbackType]: prevState[feedbackType] + 1,\r\n    }));\r\n  }\r\n\r\n  countTotalFeedback() {\r\n    return Object.values(this.state).reduce((acc, value) => acc + value);\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    if (good + bad + neutral === 0) {\r\n      return;\r\n    } else return Number(Math.round((good / (good + bad + neutral)) * 100));\r\n  }\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={options}\r\n            onLeaveFeedback={this.handleFeedback}\r\n          />\r\n          {this.countTotalFeedback() !== 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}